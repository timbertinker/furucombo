"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.newExplorerUrl = exports.ExplorerType = exports.isSupportedNetworkId = exports.isSupportedChainId = exports.NetworkId = exports.ChainId = exports.toChainId = exports.getNetworkById = exports.toNetworkId = exports.getNetwork = exports.setNetwork = exports.networkMapById = exports.networkMap = exports.networks = void 0;
const tslib_1 = require("tslib");
const data_json_1 = tslib_1.__importDefault(require("./data.json"));
exports.networks = data_json_1.default;
_a = exports.networks.reduce((accumulator, network) => {
    accumulator[0][network.chainId] = network;
    accumulator[1][network.id] = network;
    return accumulator;
}, [{}, {}]), exports.networkMap = _a[0], exports.networkMapById = _a[1];
function setNetwork(chainId, network) {
    const index = exports.networks.findIndex((network) => network.chainId === chainId);
    if (index > -1) {
        exports.networks[index] = { ...exports.networks[index], ...network };
        exports.networkMap[chainId] = { ...exports.networkMap[chainId], ...network };
    }
    else {
        exports.networks.push(network);
        exports.networkMap[chainId] = network;
    }
}
exports.setNetwork = setNetwork;
function getNetwork(chainId) {
    return exports.networkMap[chainId];
}
exports.getNetwork = getNetwork;
function toNetworkId(chainId) {
    return getNetwork(chainId).id;
}
exports.toNetworkId = toNetworkId;
function getNetworkById(networkId) {
    return exports.networkMapById[networkId];
}
exports.getNetworkById = getNetworkById;
function toChainId(networkId) {
    return getNetworkById(networkId).chainId;
}
exports.toChainId = toChainId;
var ChainId;
(function (ChainId) {
    ChainId[ChainId["mainnet"] = 1] = "mainnet";
    ChainId[ChainId["optimism"] = 10] = "optimism";
    ChainId[ChainId["bnb"] = 56] = "bnb";
    ChainId[ChainId["gnosis"] = 100] = "gnosis";
    ChainId[ChainId["polygon"] = 137] = "polygon";
    ChainId[ChainId["zksync"] = 324] = "zksync";
    ChainId[ChainId["metis"] = 1088] = "metis";
    ChainId[ChainId["polygonZkevm"] = 1101] = "polygonZkevm";
    ChainId[ChainId["base"] = 8453] = "base";
    ChainId[ChainId["iota"] = 8822] = "iota";
    ChainId[ChainId["arbitrum"] = 42161] = "arbitrum";
    ChainId[ChainId["avalanche"] = 43114] = "avalanche";
})(ChainId = exports.ChainId || (exports.ChainId = {}));
var NetworkId;
(function (NetworkId) {
    NetworkId["mainnet"] = "mainnet";
    NetworkId["optimism"] = "optimism";
    NetworkId["bnb"] = "bnb";
    NetworkId["gnosis"] = "gnosis";
    NetworkId["polygon"] = "polygon";
    NetworkId["zksync"] = "zksync";
    NetworkId["metis"] = "metis";
    NetworkId["polygonZkevm"] = "polygonZkevm";
    NetworkId["base"] = "base";
    NetworkId["iota"] = "iota";
    NetworkId["arbitrum"] = "arbitrum";
    NetworkId["avalanche"] = "avalanche";
})(NetworkId = exports.NetworkId || (exports.NetworkId = {}));
function isSupportedChainId(chainId) {
    return !!exports.networkMap[chainId];
}
exports.isSupportedChainId = isSupportedChainId;
function isSupportedNetworkId(networkId) {
    return exports.networks.some((network) => network.id == networkId);
}
exports.isSupportedNetworkId = isSupportedNetworkId;
var ExplorerType;
(function (ExplorerType) {
    ExplorerType["tx"] = "tx";
    ExplorerType["address"] = "address";
    ExplorerType["token"] = "token";
})(ExplorerType = exports.ExplorerType || (exports.ExplorerType = {}));
function newExplorerUrl(chainId, type, data) {
    return `${getNetwork(chainId).explorerUrl}${type}/${data}`;
}
exports.newExplorerUrl = newExplorerUrl;
//# sourceMappingURL=index.js.map